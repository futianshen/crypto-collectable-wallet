{"version":3,"sources":["helpers/index.ts","schemas/index.ts","apis/index.ts","layouts/DetailLayout.tsx","pages/DetailPage.tsx","layouts/DefaultLayout.tsx","pages/ListPage.tsx","Router.tsx","App.tsx","index.tsx"],"names":["handleError","error","Error","assetCollectionSchema","array","object","id","string","required","token_id","image_url","name","asset_contract","address","nullable","assetSchema","description","collection","permalink","fetchAssetCollection","pageParam","axios","get","then","res","validate","data","assets","cast","list","map","v","imageUrl","assetContractAddress","tokenId","catch","DetailLayout","prevPath","children","className","to","LeftOutlined","DetailPage","useParams","split","contractAddress","useQuery","params","asset","pick","imgUrl","collectionName","isLoading","isError","content","active","cover","src","bordered","Meta","title","href","target","block","DefaultLayout","ListPage","useInfiniteQuery","getNextPageParam","lastPages","pages","length","flatten","undefined","fetchNextPage","isFetchingNextPage","hasNextPage","ref","useRef","useEffect","element","current","observer","IntersectionObserver","entries","forEach","isIntersecting","observe","unobserve","Router","routers","path","exact","component","App","QueryClientProvider","client","QueryClient","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b7f44013.chunk.js","sourcesContent":["const handleError = (error: any) => {\n  throw new Error(error)\n}\n\nexport { handleError }\n","import { array, object, string } from \"yup\"\n\nconst assetCollectionSchema = array(\n  object({\n    id: string().required(),\n    token_id: string().required(),\n    image_url: string().required(),\n    name: string().required(),\n    asset_contract: object({\n      address: string().required(),\n    }).nullable(),\n  })\n).required()\n\nconst assetSchema = object({\n  id: string().required(),\n  name: string().required(),\n  description: string().nullable(),\n  image_url: string().required(),\n  collection: object({\n    name: string().required(),\n  }),\n  permalink: string().required(),\n}).required()\n\nexport { assetCollectionSchema, assetSchema }\n","import axios from \"axios\"\nimport { pick } from \"ramda\"\nimport { handleError } from \"../helpers\"\nimport { assetCollectionSchema, assetSchema } from \"../schemas\"\n\nconst fetchAssetCollection = ({ pageParam = 0 }) =>\n  axios\n    .get(\n      `https://api.opensea.io/api/v1/assets?format=json&owner=0x960DE9907A2e2f5363646d48D7FB675Cd2892e91&limit=20&offset=${pageParam}`\n    )\n    .then((res) => assetCollectionSchema.validate(res.data.assets))\n    .then((assets) => assetCollectionSchema.cast(assets) || [])\n    .then((list) => {\n      return list.map((v) => ({\n        id: v.id || \"\",\n        imageUrl: v.image_url || \"\",\n        name: v.name || \"\",\n        assetContractAddress: v.asset_contract?.address || null,\n        tokenId: v.token_id || \"\",\n      }))\n    })\n    .catch(handleError)\n\nconst fetchAsset = (params: { contractAddress: string; tokenId: string }) =>\n  axios\n    .get(\n      `https://api.opensea.io/api/v1/asset/${params.contractAddress}/${params.tokenId}`\n    )\n    .then((res) => assetSchema.validate(res.data))\n    .then((asset) => assetSchema.cast(asset) || {})\n    .then((asset) => {\n      return {\n        ...pick([\"id\", \"name\", \"description\", \"permalink\"], asset),\n        imgUrl: asset.image_url || \"\",\n        collectionName: asset.collection.name || \"\",\n      }\n    })\n    .catch(handleError)\n\nexport { fetchAssetCollection, fetchAsset }\n","import { LeftOutlined } from \"@ant-design/icons\"\nimport { Link } from \"react-router-dom\"\n\nconst DetailLayout: React.FC<{ prevPath: string; name: string }> = ({\n  prevPath,\n  name,\n  children,\n}) => (\n  <main>\n    <header className=\"mb-3 p-3\">\n      <Link to={prevPath} className=\"inline-flex items-center mr-2\">\n        <LeftOutlined />\n      </Link>\n      <span>{name}</span>\n    </header>\n    <section className=\"container mx-auto px-6\">{children}</section>\n  </main>\n)\n\nexport default DetailLayout\n","import { Button, Card, Skeleton } from \"antd\"\nimport { useQuery } from \"react-query\"\nimport { useParams } from \"react-router-dom\"\nimport { fetchAsset } from \"../apis\"\nimport DetailLayout from \"../layouts/DetailLayout\"\n\nconst DetailPage: React.VFC = () => {\n  const { id } = useParams<{ id: string }>()\n  const [contractAddress, tokenId] = id.split(\"_\")\n\n  const { isLoading, isError, data } = useQuery(`asset_${id}`, () =>\n    fetchAsset({ contractAddress, tokenId })\n  )\n\n  let content = null\n  if (isLoading || !data) {\n    content = <Skeleton active />\n  }\n\n  if (isError) {\n    content = <span>error</span>\n  }\n\n  if (!!data) {\n    content = (\n      <Card\n        cover={<img key={data.id} src={data.imgUrl} className=\"w-screen\" />}\n        bordered={false}\n      >\n        <Card.Meta title={data.name} description={data.description} />\n        <a href={data.permalink} target=\"_blank\">\n          <Button className=\"mt-4\" block>\n            Link\n          </Button>\n        </a>\n      </Card>\n    )\n  }\n\n  return (\n    <DetailLayout prevPath=\"/\" name={data?.collectionName || \"\"}>\n      {content}\n    </DetailLayout>\n  )\n}\n\nexport default DetailPage\n","const DefaultLayout: React.FC = ({ children }) => (\n  <main>\n    <section className=\"container mx-auto px-6 py-8\">{children}</section>\n  </main>\n)\n\nexport default DefaultLayout\n","import { Card, Skeleton, Spin } from \"antd\"\nimport { flatten } from \"ramda\"\nimport { useEffect, useRef } from \"react\"\nimport { useInfiniteQuery } from \"react-query\"\nimport { Link } from \"react-router-dom\"\nimport { fetchAssetCollection } from \"../apis\"\nimport DefaultLayout from \"../layouts/DefaultLayout\"\n\nconst ListPage: React.VFC = () => {\n  const {\n    isLoading,\n    isError,\n    data,\n    fetchNextPage,\n    isFetchingNextPage,\n    hasNextPage,\n  } = useInfiniteQuery(\"assets\", fetchAssetCollection, {\n    getNextPageParam: (lastPages, pages) =>\n      lastPages.length === 20 ? flatten(pages).length + 1 : undefined,\n  })\n\n  let content = null\n  if (isLoading || !data) {\n    content = <Skeleton active />\n  }\n\n  if (isError) {\n    content = <span>error</span>\n  }\n\n  const ref = useRef<HTMLDivElement>(null)\n\n  useEffect(() => {\n    if (!hasNextPage) {\n      return\n    }\n\n    const element = ref.current\n    if (!element) {\n      return\n    }\n\n    const observer = new IntersectionObserver((entries) =>\n      entries.forEach((v) => v.isIntersecting && fetchNextPage())\n    )\n    observer.observe(element)\n\n    return () => observer.unobserve(element)\n  }, [hasNextPage, ref.current])\n\n  if (!!data) {\n    content = (\n      <>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-12 mb-12\">\n          {flatten(data.pages).map((v) => (\n            <Link\n              key={v.id}\n              to={`/asset/${v.assetContractAddress}_${v.tokenId}`}\n            >\n              <Card cover={<img src={v.imageUrl} />}>\n                <h3 className=\"text-center\">{v.name}</h3>\n              </Card>\n            </Link>\n          ))}\n        </div>\n        <div ref={ref} className=\"text-center\">\n          {isFetchingNextPage && <Spin />}\n        </div>\n      </>\n    )\n  }\n\n  return <DefaultLayout>{content}</DefaultLayout>\n}\n\nexport default ListPage\n","import React, { ReactElement } from \"react\"\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\"\nimport DetailPage from \"./pages/DetailPage\"\nimport ListPage from \"./pages/ListPage\"\n\ntype RouterProps = { exact: boolean; path: string; component: ReactElement }\n\nconst Router: React.VFC = () => {\n  const routers: RouterProps[] = [\n    {\n      path: \"/\",\n      exact: true,\n      component: <ListPage />,\n    },\n    {\n      path: \"/asset/:id\",\n      exact: false,\n      component: <DetailPage />,\n    },\n  ]\n\n  return (\n    <BrowserRouter>\n      <Switch>\n        {routers.map(({ path, exact, component }) => (\n          <Route key={path} path={path} exact={exact}>\n            {component}\n          </Route>\n        ))}\n      </Switch>\n    </BrowserRouter>\n  )\n}\n\nexport default Router\n","import React from \"react\"\nimport { QueryClient, QueryClientProvider } from \"react-query\"\nimport Router from \"./Router\"\n\nconst App: React.VFC = () => {\n  return (\n    <QueryClientProvider client={new QueryClient()}>\n      <Router />\n    </QueryClientProvider>\n  )\n}\n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}